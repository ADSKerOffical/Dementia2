В роблоксе существуют множество эксплоитов и все они работают на клиенте
Но даже несмотря на это они могут натворить серьезные дела
Для таких дел существуют множество эксплоит функций с помощью которых можно испортить игру
И вот многие из них:

1) getgenv(): table – Получает глобальное окружение эксплоита. Является заменой _G, но без добавления _G, можно изменить практически любую функцию даже сам getgenv
Пример:

getgenv().iscclosure = newcclosure(function()
  return true
end)

2) newcclosure(function): function – Создаёт функцию у которой тип функции C
Пример:

local as = newcclosure(function(num)
  return 1 + num
end)

3) iscclosure(function): boolean – Проверяет является ли функция типом C
Пример:

if iscclosure(print) then
  print(true)
end

4) islclosure(function): boolean – Проверяет является ли функция типом Lua
Пример:

local function sfj() end
print(islclosure(print), islclosure(sfj)) -- false true

5) setreadonly(table, enable: boolean): void – Данная функция замораживает таблицу (нельзя изменить)
Пример:

setreadonly(table, false)

getgenv().table.nil = newcclosure(function()
  return {}
end)

setreadonly(table, true)

6) isreadonly(table): boolean – Проверяет является ли таблица замороженная
Пример:

if isreadonly(table) then
  setreadonly(table, false)
end

7) getrawmetatable(table): table – Получает метатаблицу таблицы игнорируя защиту
Пример:

local tabl = {"G"}
setmetatable(tabl, {
  __metatable = "protected"
})
print(getmetatable(tabl), getrawmetatable(tabl)) -- protected, table: 0xADRESS

8) setrawmetatable(table, metatable: table): void – Ставит метатаблицу для таблицы игнорируя защиту
Пример:

local tabl = {"G"}
setmetatable(tabl, {
  __metatable = "protected"
})
setrawmetatable(tabl, {})
print(getmetatable(tabl)) -- table: 0xADRESS

9) setfpscap(fps: number): void – Делает ограничение для фпс. По умолчанию 0

10) getfpscap(): number – Получает ограничение фпс у функции setfpscap

11) firesignal(signal: RBXScriptSignal, args: variant): void – Запускает все функции у сигнала с определёнными аргументами
Пример:

firesignal(game.Players.LocalPlayer.CharacterAdded, game.Players.LocalPlayer.Character)

12) getconnections(signal: RBXScriptSignal) – Получает все соединения у данного сигнала
Пример: 

for _, con in next, getconnections(game.Players.LocalPlayer.Character.Humanoid.Died) do
  con:Disconnect()
end

Параметры у getconnections:

.Function – Получает функцию которая подключена к соединению
.Script – Получает скрипт откуда вызывается соединение (Не всегда появляется)
.LuaConnection – Проверяет является ли функция типом Lua
.State – Проверяет состояние функции

Методы у getconnections:

:Fire() – запускает соединение
:Enable() – включает соединение
:Disable() – останавливает соединение 
:Disconnect() – полностью выключает соединение

13) fireclickdetector(cd: ClickDetector, radius: number): void – Запускает ClickDetector (если радиус не указан, то будет активироваться с радиусом поставленным у этого ClickDetector)
Пример:

for _, cl in next, workspace:GetDescendants() do
  if cl:IsA("ClickDetector") then
    fireclickdetector(cl, math.huge)
  end
end

14) firetouchinterest(part1: BasePart, part2: BasePart, method: number): void – Симулирует прикосновение part1 к part2 при условии что part1 принадлежит симуляцией локального игрока. 0 – Touched, 1 – TouchEnded
Пример:

fireclickdetector(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChildWhichIsA("BasePart"), part, 0)

15) fireproximityprompt(prompt: ProximityPrompt, method: number): void – Запускает ProximityPrompt. Радиус ограничен сервером

16) isnetworkowner(part: BasePart): boolean – Проверяет является ли объект под контролем симуляции локального игрока. Если объект прикреплённый, то он автоматически будет false если он был закреплён сервером
Пример:

for _, part in next, workspace:GetDescendants() do
  if part:IsA("BasePart") and isnetworkowner(part) then
    part.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
  end
end

17) identifyexecutor(): string – Получает имя эксплоита. Легко изменить с помощью getgenv

18) getexecutorname(): string – Получает имя и версию эксплоита. Также легко изменить с помощью getgenv

19) getcallingscript(): Instance – Получает скрипт который сейчас выполняется в окружении
Пример:

if getcallingscript() then
  print(getcallingscript():GetFullName())
end

20) getsenv(script: BaseScript): table – Получает окружение скрипта по аналогии с getfenv. Невозможно получить информацию с помощью итерации
Пример:

getgenv().getsenv(game.Players.LocalPlayer.PlayerScripts.RbxCharacterSounds).wait = newcclosure(function(number)
  return task.wait()
end)

21) getscriptbytecode(script: BaseScript): string – Получает байт код скрипта

22) getgc(including_tables: boolean): table – Получает все объекты в garbage collector (не важно класс, поток или функция)
Пример 1:

for _, part in next, getgc(true) do
  if typeof(part) == "Instance" and part:IsA("BasePart") and part.Name == "Budg" then
    part:Clone().Parent = game.Workspace
  end
end

Пример 2:

for _, tabl in next, getgc(true) do
  if typeof(tabl) == "table" and rawget(tabl, "Ammo") then
    tabl.Ammo = math.huge
  end
end

Пример 3:

local func = print
for _, fup in next, getgc(true) do
  if typeof(fup) == "function" and fup == func then
    print(fup, debug.getinfo(fup).name)
    break
  end
end

23) checkcaller(): boolean – Выводит true если действие скрипта было выполнено на стороне эксплоита
Пример:

if not checkcaller() then
  print(getcallingscript():GetFullName())
end

24) clonefunction(function): function – Копирует функцию, но она не идентичная с оригиналом. Без сильная перед сильными хуками
Пример:

local function foo()
    print("Hello, world!")
end
local bar = clonefunction(foo)
foo() --> Hello, world!
bar() --> Hello, world!
print(foo == bar) --> false

25) restorefunction(function): void – Убирает хук с функции если он был
Пример 1:

if ishooked(print) or isfunctionhooked(print) then
  restorefunction(print)
end

Пример 2:

local a = function()
  return 1
end
local hook; hook = hookfunction(a, function()
  return 2
end)
print(a()) --2
restorefunction(a)
print(a()) -- 1

26) cloneref(class: Instance): Instance – Копирует Instance, но с другим Unequeid
Пример:

local a = Instance.new("ScreenGui")
local b = cloneref(a)
print(b == a) -- false

27) getinstances(): table – Получает все Instance в игре и те которые скрыты от обычного game:GetDescendants()

28) getnilinstances(): table – Получает все Instance у которых Parent указан на nil
Пример:

for _,v in next, getnilinstances() do
   if v.ClassName== "Part" and v.Name== "Budgie" then 
    v:Clone().Parent = workspace
  end 
end

29) getloadedmodules(): table – Получает все недоступные (которые нельзя получить обычным способом) модули

30) gethiddienproperty(object: Instance, prop: string): value – Получает спрятанное свойство у instance
Пример:

if gethiddienproperty(part, "Friction") == 0 then
  part.CustomPhysicalProperties = PhysicalProperties.new(1, 1, 0)
end

31) sethiddenproperty(object: Instance, prop: string, value: variant): void – Ставит значение для спрятанного параметра у instance
Пример:

if gethiddienproperty(part, "Friction") > 0 then
  sethiddenproperty(part, "Friction", -math.huge)
end

32) setsimulationradius(min: int, max: int): void – Ставит радиус симуляции у локального игрока

33) replicatesignal(signal: RBXScriptSignal): void – Запускает особый сигнал на сервер
Пример:

replicatesignal(game.Players.LocalPlayer.Kill)

34) cansignalreplicate(signal: RBXScriptSignal): boolean – Проверяет может ли сигнал запустится на сервер
Пример:

if cansignalreplicate(game.Players.LocalPlayer.Kill) then
  replicatesignal(game.Players.LocalPlayer.Kill)
end

35) isrbxactive/iswindowactive(): boolean – Проверяет окно с роблоксом открыто или закрыто

36) keypress(keycode: int): void – Нажимает на клавишу по цифре (можно десятичной или по HEX)
Пример:

keypress(0x3f)
keypress(64)

37) loadstring(script: string, chunk: string): function – Запускает скрипт по тексту
Пример:

loadstring('print("Hello")')()

38) setclipboard(text: string): void – Копирует текст

39) setfflag(flag: string, value: string): void – Ставит значение для FFlag (Системные алгоритмы для игры)
Пример:

setfflag("TaskSchedulerTargetFps", "10") -- эквивалентно setfpscap 

40) getfflag(flag: string): value – Получает значение у FFlag
Пример:

if tonumber(getfflag("TaskSchedulerTargetFps")) > 0 then
  setfflag("TaskSchedulerTargetFps", 0)
end

41) hookfunction(func1, func2): function – Заменяет значение func1 на func2 (Тип функции func2 обязательно должен быть как у func1)
Пример 1:

hookfunction(print, warn)

Пример 2:

local hook; hook = hookfunction(print, newcclosure(function(...)
  if rawget({...}, "Text") then
    error("Not support", 0)
  end
end))

Пример 3:

local hook; hook = hookfunction(iscclosure, newcclosure(function()
  return false
end))

42) hookmetamethod(instance, metamethod: string, newfunc: function): function – Заменяет внутреннюю метатаблицу внутри instance
Пример 1:

local hook; hook = hookmetamethod(game, "__index", newcclosure(function(self, prop)
  if self == game and prop == "PlaceId" then
    return 123456789
  end
  return hook(self, prop)
end))

Пример 2: 

local hook; hook = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
  if self == game.Players.LocalPlayer.Character and getnamecallmethod() == "BreakJoints" then
    return nil
  end
  return hook(self, ...)
end))

43) getnamecallmethod(): string – получает название метода который сейчас вызывается

44) getcustomasset/getsynasset(filename: string): rbxasset – Получает кастомный айди asset через файл внутри папки эксплоита
Пример:

if isfile("Image.png") then
  decal.Texture = getcustomasset("Image.png")
end

45) writefile(filename: string, source: value): void – Создаёт новый файл в папке эксплоита. Если файл уже существует, то содержимое того файла изменяется
Пример:

writefile("Text.txt", "Just random text")

46) isfile(filename: string): boolean – Проверяет существует ли такой файл
Пример:

if not isfile("Text.txt") then
  writefile("Text.txt", "Just random text")
end

47) delfire(filename: string): void – Удаляет файл по названию 
Пример:

if isfile("Text.txt") then
  delfile("Text.txt")
end

48) readfile(filename: string): value – Получает содержимое файла

49) loadfile(filename: string): function – Загружает файл в виде функции

50) makefolder(foldername: string): void – Создаёт новую папку
Пример:

makefolder("Test")

51) isfolder(foldername: string): boolean – Проверяет является или существует папка с таким именем 

52) delfolder(foldername: string): void – Удаляет папку

53) listfiles(foldername: string): table – Получает название всех файлов в папке
Пример:

for _, file in next, listfiles("BudgiePaintConfig") do
  if isfile(file) then
    delfile(file)
  end
end

54) queueonteleport(script: string): void – После телепортации в другой плейс или сервер загружает скрипт

55) setscriptable(object: Instance, property: string, value): void – Делает так чтобы параметр у этого Instance нельзя было изменить делая его hidden
Пример:

local part = Instance.new("Part", workspace)
setscriptable(part, "Size", false)
part.Size = Vector3.new(10, 10, 10) -- Ошибка

56) isscriptable(object: Instance, property: string): boolean – Проверяет можно ли изменить данный параметр 
Пример:

local part = Instance.new("Part", workspace)
setscriptable(part, "Size", false)
  if not isscriptable(part, "Size") then
    setscriptable(part, "Size", true)
  end
part.Size = Vector3.new(10, 10, 10)

57) getscripts(): table – Получает все скрипты которые нельзя узнать обычным способом

58) getcallbackvalue(event: BindableEvent, execute_method: string): function – Получает функцию у BindableEvent которая вызывается при определённом запуске
Пример:

local event = Instance.new("BindableFunction")
event.OnInvoke = print

local callback = getcallbackvalue(event, "OnInvoke")
print(typeof(callback), debug.getinfo(callback).name) -- function, print

59) filtergc(type_name: string, options: table, return_fisrt: boolean): table – Тоже что и getgc(true), но с особой фильтрацией функций и таблиц
Пример:

local func = filtergc("function", {
    Constants = {"Player", "Character"},
    IgnoreExecutor = true
}, true)

local tables = filtergc("table", {
    Keys = {"Health", "Speed"},
    Values = {100},
    KeyValuePairs = {
       PlayerName = "Name",
       Score = 100
    }
})

Параметры у filtergc:

Для функций:

   Name: функции которые должны возвращаться (сопоставимо с debug.getinfo(func).name)
   Constants: таблица с constants которая должна быть во всех функциях (сопоставимо с debug.getconstants(func))
   Upvalues: таблица с upvalues которая должна быть у всех функций (сопоставимо с debug.getupvalues(func))
   Hash: хэш который должен быть у функций (???)
   Environment: специальная таблица с окружением которая должна быть у функции (getfenv)
   StartLine: первая линия которая должна быть у функции
   IgnoreExecutor: игнорирует функции от эксплоита

Для таблиц:

   Keys: имена индексов которые должны быть у таблиц
   Values: значения которые должны быть у таблиц
   KeyValuePairs: Конкретные пары которые должны точно совпадать
   Metatable: метатаблица которая должна быть у таблицы
   
60) getscripthash(script: BaseScript): string – Получает SHA256 у скрипта
Пример:

if getscripthash(game.Players.LocalPlayer.TestScript) then
  print(getscripthash(game.Players.LocalPlayer.TestScript))
end

61) decompile(script: BaseScript): string – получает исходный код из LocalScript или ModuleScript

62) isfunctionhooked(func: function): boolean – проверяет функция находится под действием hook
Пример:

function a(num)
    print(num)
end
print(isfunctionhooked(a)) -- false
hookfunction(a, function(num) old(num + 1) end)
print(isfunctionhooked(a)) -- true

63) gethui(): ScreenGui – возвращает ссылку на ScreenGui которую нельзя обнаружить анти читам

64) ishooked(func: function): boolean – проверяет является ли функция хуком
Пример:

for _, func in next, getgc(true) do
  if typeof(func) == "function" and ishooked(func) then
    restorefunction(func)
  end
end
