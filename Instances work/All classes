Part:
Описание – обычный объект без всяких особенностей. Можно поставить форму, цвет и т.д. Объект должен быть потомком Workspace
Абстрактный класс – BasePart

MeshPart:
Описание – объект который имеет свою уникальную текстуру (TextureID) и форму (MeshId). Хитбоксы не влияют на размер Mesh
Минусы – можно создать только при загрузке модели из Store, плохой рендеринг
Абстрактный класс – BasePart

TrussPart:
Описание – объект по которому могут забираться гуманоиды
Абстрактный класс – BasePart

WedgePart:
Описание – обычный объект с формой Wedge
Абстрактный класс – BasePart

CornerWedgePart:
Описание – обычный объект с формой CornerWedge
Абстрактный класс – BasePart

SpawnLocation:
Описание – объект к которому спавнятся игроки и если их несколько, то игрок спавнится на рандомном спавне
Абстрактный класс – BasePart

Seat:
Описание – объект который предназначен для обычного сидения
Минусы – нужно создавать для этого другие скрипты чтобы можно было сесть
Абстрактный класс – BasePart

VehicleSeat:
Описание – объект который предназначен для контроля модели и сиденья. Контролирует скорость и т.п у модели при передвижении
Минусы – нужно создавать для этого другие скрипты чтобы можно было сесть
Абстрактный класс – BasePart

Terrain:
Описание – это не просто объект, а объект который контролирует местность в Workspace. Нельзя удалить и создать. Родитель указан только в Workspace
Абстрактный класс – BasePart

Sound:
Описание – класс который создаёт звук объекту. Родитель должен указываться на объекты или Workspace. Если родитель указан на Workspace, то этот звук будет слышен всем
Абстрактный класс – nil

Folder:
Описание – класс для создания нового хранилища 
Абстрактный класс – nil

Player:
Описание – класс который создаёт игрока в табе. Родитель может быть указан только на game.Players
Минусы – нельзя создать в роблокс студио
Абстрактный класс – nil

Backpack:
Описание – это не сказать что класс, но это класс который есть у игроков для хранения инструментов
Абстрактный класс – nil

Tool:
Описание – класс который создаёт инструмент. Он должен быть находится либо в Backpack либо на Model. Если инструмент экипирован, то его родитель автоматически становится на Model 
Абстрактный класс – nil

Model:
Описание – класс для создания модели 
Абстрактный класс – nil

ForceField:
Описание – класс который создаёт щит и он игнорирует Humanoid:TakeDamage и Model:BreakJoints(), но не игнорирует обычное изменение хп. Родитель может быть указан не только на модель, но и на объект
Абстрактный класс – nil

Humanoid:
Описание – класс который создаёт жизнь модели. Класс обязательно должен быть на Model
Абстрактный класс – nil

Animation:
Описание – класс для создания анимации 
Минусы – для запуска анимации нужно использовать другой класс
Абстрактный класс – nil

AnimationTrack:
Описание – класс который загружает анимацию. Чтобы загрузить нужно использовать Humanoid:LoadAnimation(anim: Animation)
Абстрактный класс – nil

Sky:
Описание – класс который создаёт кастомное небо
Абстрактный класс – nil

Atmosphere:
Описание – класс который добавляет глобальный туман. Родитель обязательно 
Минусы – чтобы класс работал, нужно иметь класс Sky
Абстрактный класс – PostEffect

Clouds:
Описание – класс который создаёт кастомное облака. Родитель обязательно должен быть на Workspace.Terrain
Минусы – при перемещении облака сильно вибрируют
Абстрактный класс – nil

NumberValue:
Описание – класс который хранит числовое значение
Минусы – при больших значениях счёт может быть не точным, но бесконечным
Абстрактный класс – ValueBase

IntValue:
Описание – класс который хранит только целые числа и их счёт максимально точный
Минусы – при достижения числа 2^63 - 1 или же 9223372036854775807 (9 квинтилионов) счёт превращает увеличиваться (как и в положительном в виде так и в отрицательном)
Абстрактный класс – ValueBase

ObjectValue:
Описание – класс который хранит только Instance
Абстрактный класс – ValueBase

StringValue:
Описание – класс который хранит только строковое значение
Абстрактный класс – ValueBase

ClickDetector:
Описание – класс который создаёт событие которое срабатывает при нажатии на объект. Можно изменять доступную дистанцию
Абстрактный класс – nil

ProximityPrompt:
Описание – класс который создаёт кастомную кнопку которую можно либо зажать либо нажать
Минусы – кнопка появляется не только когда объект рядом, но и когда камера рядом и это нельзя контролировать
Абстрактный класс – nil

Decal:
Описание – класс который создаёт изображение на объекте
Абстрактный класс – FaceInstance

Texture:
Описание – класс который практически как Decal, но позволяет регулировать позицию изображение 
Абстрактный класс – FaceInstance

PlayerGui:
Описание – класс который позволяет видеть изображение на экране у игрока 
Абстрактный класс – BasePlayerGui

Explosion: 
Описание – класс который просто создаёт взрыв
Минусы – радиус взрыва можно изменить, но размер эффекта взрыва нельзя
Абстрактный класс – Effect

Fire:
Описание – класс который создаёт эффект огня
Абстрактный класс – Effect

Smoke:
Описание – класс который создаёт эффект дыма
Абстрактный класс – Effect

ParticleEmitter:
Описание – продвинутый класс который позволяет создавать партиклы любой текстуры и настройками
Абстрактный класс – nil
